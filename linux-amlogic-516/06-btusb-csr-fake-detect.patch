diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index ea72afb7a..7e424297a 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -1914,7 +1914,9 @@ static int btusb_setup_csr(struct hci_dev *hdev)
 	 * HCI rev values always match. As they both store the firmware number.
 	 */
 	if (le16_to_cpu(rp->manufacturer) != 10 ||
-	    le16_to_cpu(rp->hci_rev) != le16_to_cpu(rp->lmp_subver))
+		le16_to_cpu(rp->lmp_subver) == 0x0811 ||
+		le16_to_cpu(rp->lmp_subver) == 0x0812 ||
+		le16_to_cpu(rp->hci_rev) != le16_to_cpu(rp->lmp_subver))
 		is_fake = true;
 
 	/* Known legit CSR firmware build numbers and their supported BT versions:
@@ -4007,8 +4009,9 @@ static int btusb_probe(struct usb_interface *intf,
 		set_bit(HCI_QUIRK_SIMULTANEOUS_DISCOVERY, &hdev->quirks);
 
 		/* Fake CSR devices with broken commands */
-		if (le16_to_cpu(udev->descriptor.idVendor)  == 0x0a12 &&
-		    le16_to_cpu(udev->descriptor.idProduct) == 0x0001)
+		if ((le16_to_cpu(udev->descriptor.idVendor)  == 0x0a12 &&
+			le16_to_cpu(udev->descriptor.idProduct) == 0x0001) ||
+			(bcdDevice <= 0x100 || bcdDevice == 0x134 || bcdDevice == 0x8891))
 			hdev->setup = btusb_setup_csr;
 	}
 
