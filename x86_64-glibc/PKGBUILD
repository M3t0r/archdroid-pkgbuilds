# Maintainer: Jefferson Gonzalez <jgmdev@gmail.com>
# Contributor: Anatol Pomozov
# Contributor: Eli Schwartz <eschwartz@archlinux.org>
# Contributor: Christer Solskogen <christer.solskogen@gmail.com>
#
# Build and install order:
#   x86_64-binutils
#   x86_64-linux-api-headers
#   x86_64-gcc-bootstrap
#   x86_64-glibc
#   x86_64-gcc
#   x86_64-glibc

_arch=x86_64
_target=$_arch-linux-gnu
pkgname=$_arch-glibc
pkgver=2.34
pkgrel=1
pkgdesc="GNU C Library $_arch target"
arch=(aarch64)
url='https://www.gnu.org/software/libc/'
license=('GPL' 'LGPL')
depends=($_arch-gcc $_arch-linux-api-headers)
options=(!strip staticlibs)
source=(https://ftp.gnu.org/gnu/libc/glibc-$pkgver.tar.xz)
sha256sums=('44d26a1fe20b8853a48f470ead01e4279e869ac149b195dda4e44a195d981ab2')

prepare() {
  mkdir -p glibc-build
}

build() {
  cd glibc-build

  echo "build-programs=no" > configparms
  echo "cross-compiling=yes" >> configparms
  echo "slibdir=/usr/lib" >> configparms
  echo "rtlddir=/usr/lib" >> configparms

  unset CFLAGS
  ../glibc-$pkgver/configure \
    --prefix=/usr \
    --host=$_target \
    --libdir=/usr/lib \
    --disable-timezone-tools \
    --enable-kernel=4.4 \
    --enable-bind-now \
    --enable-stackguard-randomization \
    --enable-multi-arch \
    --enable-lock-elision CFLAGS="-O2 -pipe"

  make
}

package() {
  cd glibc-build
  make DESTDIR="$pkgdir"/usr/$_target/sys-root install

  #we don't want static libraries. Only keep the one that we really need.
  find "$pkgdir"/usr/$_target/sys-root  -name '*.a' -and -not -name libc_nonshared.a -delete

  #Remove files we don't need in a cross compilation environment
  rm -r "$pkgdir"/usr/$_target/sys-root/{etc,usr/share,var}

  #strip manually
  echo ""
  echo "Stripping $pkgdir/usr/$_target/sys-root"
  echo ""
  find "$pkgdir"/usr/$_target/sys-root -name '*.so' \
    -and \
    ! -name 'libc.so' \
    -and \
    ! -name 'libm.so' \
    -print0 | xargs -0 $_target-strip --strip-all

  #fix missing symlink
  ln -s libpthread.so.0 "$pkgdir"/usr/$_target/sys-root/usr/lib/libpthread.so
}
